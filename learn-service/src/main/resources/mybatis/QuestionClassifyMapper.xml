<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhuiyi.ms.learn.mapper.QuestionClassifyMapper">
    <resultMap id="BaseResultMap" type="com.zhuiyi.ms.learn.entity.QuestionClassify">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="classify_name" jdbcType="VARCHAR" property="classifyName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, classify_name, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_question_classify
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insert" parameterType="com.zhuiyi.ms.learn.entity.QuestionClassify">
      insert into t_question_classify (id, classify_name, create_time,
        update_time)
      values (#{id,jdbcType=BIGINT}, #{classifyName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.zhuiyi.ms.learn.entity.QuestionClassify"
            useGeneratedKeys="true" keyProperty="id">
        insert into t_question_classify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="classifyName != null">
                classify_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="classifyName != null">
                #{classifyName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zhuiyi.ms.learn.entity.QuestionClassify">
        update t_question_classify
        <set>
            <if test="classifyName != null">
                classify_name = #{classifyName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhuiyi.ms.learn.entity.QuestionClassify">
        UPDATE t_question_classify
        SET classify_name = #{classifyName,jdbcType=VARCHAR},
            create_time   = #{createTime,jdbcType=TIMESTAMP},
            update_time   = #{updateTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <resultMap id="queryListResultMap" type="com.zhuiyi.ms.learn.entity.vo.QuestionClassifyVo">
        <result column="id" property="classifyId"/>
        <result column="classify_name" property="classifyName"/>
        <result column="used_count" property="usedCount"/>
    </resultMap>
    <select id="queryList" resultMap="queryListResultMap">
        select
        t_qc.id, t_qc.classify_name, tmp.used_count
        from t_question_classify AS t_qc
        left join (
        SELECT
        t_qi.question_classify_id,
        count(1) AS used_count
        FROM
        t_question_info AS t_qi
        GROUP BY
        t_qi.question_classify_id
        ) AS tmp ON t_qc.id = tmp.question_classify_id
        order by t_qc.id desc
        <if test="page != null">
            limit #{page.offset}, #{page.pageSize}
        </if>
    </select>

    <delete id="deleteByPrimaryKey">
        delete from t_question_classify
        where id = #{classifyId}
    </delete>
</mapper>